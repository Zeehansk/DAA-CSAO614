#include <stdio.h>
#include <stdlib.h>

struct item {
    int weight;
    int value;
};

int compare_items(const void* a, const void* b) {
    struct item* item_a = (struct item*)a;
    struct item* item_b = (struct item*)b;
    double ratio_a = (double)item_a->value / item_a->weight;
    double ratio_b = (double)item_b->value / item_b->weight;
    if (ratio_a > ratio_b) {
        return -1;
    } else if (ratio_a < ratio_b) {
        return 1;
    } else {
        return 0;
    }
}

void knapsack(struct item* items, int n, int capacity) {
    qsort(items, n, sizeof(struct item), compare_items);
    int total_value = 0;
    for (int i = 0; i < n; i++) {
        if (capacity == 0) {
            break;
        }
        if (items[i].weight <= capacity) {
            total_value += items[i].value;
            capacity -= items[i].weight;
        } else {
            total_value += (double)capacity / items[i].weight * items[i].value;
            capacity = 0;
        }
    }
    printf("Maximum value of items that can be put into the knapsack is: %d\n", total_value);
}

int main() {
    int n, capacity;
    printf("Enter the number of items: ");
    scanf("%d", &n);
    struct item items[n];
    for (int i = 0; i < n; i++) {
        printf("Enter the weight and value of item %d: ", i + 1);
        scanf("%d %d", &items[i].weight, &items[i].value);
    }
    printf("Enter the capacity of the knapsack: ");
    scanf("%d", &capacity);
    knapsack(items, n, capacity);
    return 0;
}
